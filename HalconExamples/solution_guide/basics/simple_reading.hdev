<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.1.0">
<procedure name="main">
<interface/>
<body>
<c>* This example program demonstrates how to read text with the</c>
<c>* Automatic Text Reader using a pretrained OCR font</c>
<c>* </c>
<l>dev_update_off ()</l>
<c>* </c>
<c>* Acquire the image</c>
<l>read_image (Image, 'numbers_scale')</l>
<l>get_image_pointer1 (Image, Pointer, Type, Width, Height)</l>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, Width, Height, 'black', WindowID)</l>
<l>dev_set_part (0, 0, Height - 1, Width - 1)</l>
<l>dev_set_line_width (2)</l>
<l>dev_set_color ('yellow')</l>
<l>dev_set_draw ('margin')</l>
<l>dev_display (Image)</l>
<l>set_display_font (WindowID, 12, 'mono', 'true', 'false')</l>
<l>stop ()</l>
<c>* </c>
<c>* Create the Automatic Text Reader with a pretrained OCR font</c>
<l>create_text_model_reader ('auto', 'Document_0-9_NoRej', TextModel)</l>
<c>* </c>
<c>* Segment the image and read the text</c>
<l>find_text (Image, TextModel, TextResultID)</l>
<c>* </c>
<c>* Display the segmentation results</c>
<l>get_text_object (Characters, TextResultID, 'all_lines')</l>
<l>dev_display (Image)</l>
<l>dev_display (Characters)</l>
<l>stop ()</l>
<c>* Display the reading results</c>
<l>get_text_result (TextResultID, 'class', Classes)</l>
<l>count_obj (Characters, Number)</l>
<l>for Index := 1 to Number by 1</l>
<l>    dev_set_color ('yellow')</l>
<l>    select_obj (Characters, SingleChar, Index)</l>
<l>    dev_set_color ('white')</l>
<l>    Class := Classes[Index - 1]</l>
<l>    smallest_rectangle1 (SingleChar, Row1, Column1, Row2, Column2)</l>
<l>    set_tposition (WindowID, Row1 - 17, (Column2 + Column1) * 0.5 - 5)</l>
<l>    write_string (WindowID, Class[0])</l>
<l>endfor</l>
<l>stop ()</l>
<c>* </c>
<c>* Free memory</c>
<l>clear_text_result (TextResultID)</l>
<l>clear_text_model (TextModel)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
