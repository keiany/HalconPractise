<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.1.0">
<procedure name="main">
<interface/>
<body>
<c>* ------------------------------------------------------------------------------------------------</c>
<c>* This example program shows how to grab simultaneously from two cameras.</c>
<c>* NOTE: The example is preconfigured for the BitFlow image acquisition interface.</c>
<c>*       Please adapt the marked lines for your own image acquisition device.</c>
<c>* ------------------------------------------------------------------------------------------------</c>
<c>* general configuration of HDevelop</c>
<l>set_system ('do_low_error', 'true')</l>
<l>dev_update_window ('off')</l>
<l>stop ()</l>
<c>* step 1: connect to the two boards</c>
<c>* -&gt; Please adapt the following lines for your own image acquisition device</c>
<l>AcqName := 'BitFlow'</l>
<l>open_framegrabber (AcqName, 1, 1, 0, 0, 0, 0, 'default', -1, 'default', -1, 'default', 'default', 'default', 0, -1, AcqHandle)</l>
<l>stop ()</l>
<l>set_framegrabber_param (AcqHandle, 'num_simultaneous_cameras', 2)</l>
<c>* step 2: open correctly sized windows</c>
<l>grab_image (SimulImages, AcqHandle)</l>
<l>get_image_pointer1 (SimulImages, Pointer, Type, Width, Height)</l>
<l>count_channels (SimulImages, num_channels)</l>
<l>dev_close_window ()</l>
<l>WindowHandles := []</l>
<l>for i := 0 to num_channels - 1 by 1</l>
<l>    dev_open_window (0, i * (Width / 4 + 20), Width / 4, Height / 4, 'black', WindowHandle)</l>
<l>    dev_set_part (0, 0, Height - 1, Width - 1)</l>
<l>    tuple_concat (WindowHandles, WindowHandle, WindowHandles)</l>
<l>endfor</l>
<l>stop ()</l>
<c>* step 3: grab and display images</c>
<l>while (1)</l>
<l>    grab_image (SimulImages, AcqHandle)</l>
<l>    if (num_channels == 2)</l>
<l>        decompose2 (SimulImages, Image0, Image1)</l>
<l>        dev_set_window (WindowHandles[0])</l>
<l>        dev_display (Image0)</l>
<l>        dev_set_window (WindowHandles[1])</l>
<l>        dev_display (Image1)</l>
<l>    else</l>
<l>        if (num_channels == 1)</l>
<l>            dev_display (SimulImages)</l>
<l>        else</l>
<l>            image_to_channels (SimulImages, ImageArray)</l>
<l>            for i := 1 to num_channels by 1</l>
<l>                select_obj (ImageArray, Image, i)</l>
<l>                dev_set_window (WindowHandles[i - 1])</l>
<l>                dev_display (Image)</l>
<l>            endfor</l>
<l>        endif</l>
<l>    endif</l>
<l>    stop ()</l>
<l>endwhile</l>
<l>stop ()</l>
<c>* -------------------  end of the application  -----------------</c>
<c>* clean up</c>
<l>dev_update_window ('on')</l>
<l>close_framegrabber (AcqHandle)</l>
<l>for i := num_channels - 1 to 1 by -1</l>
<l>    dev_set_window (WindowHandles[i])</l>
<l>    dev_close_window ()</l>
<l>endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
