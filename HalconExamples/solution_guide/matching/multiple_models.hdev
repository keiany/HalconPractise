<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.1.0">
<procedure name="main">
<interface/>
<body>
<c>* ------------------------------------------------------------------------------------------------</c>
<c>* This example program searches for two types of objects simultaneously.</c>
<c>* ------------------------------------------------------------------------------------------------</c>
<c>* general configuration of HDevelop</c>
<l>dev_update_window ('off')</l>
<c>* image acquisition and window size</c>
<l>read_image (ModelImage, 'rings_and_nuts')</l>
<l>get_image_pointer1 (ModelImage, Pointer, Type, Width, Height)</l>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, Width, Height, 'white', WindowHandle)</l>
<l>dev_set_part (0, 0, Height - 1, Width - 1)</l>
<l>dev_display (ModelImage)</l>
<c>* colors and other settings for the visualization</c>
<l>dev_set_color ('blue')</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (2)</l>
<l>set_display_font (WindowHandle, 14, 'mono', 'true', 'false')</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>stop ()</l>
<c>* -------------------  start of the application  ----------------</c>
<c>* -&gt; select the model objects</c>
<l>gen_circle (ModelROIRing, 121, 299, 55)</l>
<l>gen_circle (ModelROINut, 324, 279, 52)</l>
<l>dev_display (ModelImage)</l>
<l>dev_display (ModelROIRing)</l>
<l>dev_display (ModelROINut)</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>stop ()</l>
<c>* step 1: create the models</c>
<l>reduce_domain (ModelImage, ModelROIRing, ImageROIRing)</l>
<l>create_scaled_shape_model (ImageROIRing, 'auto', -rad(22.5), rad(45), 'auto', 0.8, 1.2, 'auto', 'none', 'use_polarity', 60, 10, ModelIDRing)</l>
<l>inspect_shape_model (ImageROIRing, PyramidImage, ModelRegionRing, 1, 30)</l>
<l>get_shape_model_contours (ShapeModelRing, ModelIDRing, 1)</l>
<l>count_obj (ShapeModelRing, NumContoursRing)</l>
<l>dev_clear_window ()</l>
<l>dev_display (ModelRegionRing)</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>stop ()</l>
<l>reduce_domain (ModelImage, ModelROINut, ImageROINut)</l>
<l>create_scaled_shape_model (ImageROINut, 'auto', -rad(30), rad(60), 'auto', 0.6, 1.4, 'auto', 'none', 'use_polarity', 60, 10, ModelIDNut)</l>
<l>inspect_shape_model (ImageROINut, PyramidImage, ModelRegionNut, 1, 30)</l>
<l>get_shape_model_contours (ShapeModelNut, ModelIDNut, 1)</l>
<l>count_obj (ShapeModelNut, NumContoursNut)</l>
<l>dev_display (ModelRegionNut)</l>
<c>* step 2: save the relevant information in tuples</c>
<l>ModelIDs := [ModelIDRing,ModelIDNut]</l>
<l>concat_obj (ShapeModelRing, ShapeModelNut, ShapeModels)</l>
<l>StartContoursInTuple := [1,NumContoursRing + 1]</l>
<l>NumContoursInTuple := [NumContoursRing,NumContoursNut]</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>stop ()</l>
<l>read_image (SearchImage, 'rings_and_nuts')</l>
<l>dev_display (SearchImage)</l>
<c>* step 3: create two search ROIs (upper and lower part of the image)</c>
<l>gen_rectangle1 (SearchROIRing, 110, 10, 130, Width - 10)</l>
<l>gen_rectangle1 (SearchROINut, 315, 10, 335, Width - 10)</l>
<c>* -&gt; "add" the ROIs to the search image</c>
<l>concat_obj (SearchROIRing, SearchROINut, SearchROIs)</l>
<l>dev_set_color ('blue')</l>
<l>dev_display (SearchROIs)</l>
<l>add_channels (SearchROIs, SearchImage, SearchImageReduced)</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>stop ()</l>
<c>* step 4: find all objects</c>
<l>dev_display (SearchImage)</l>
<l>dev_set_color ('cyan')</l>
<l>find_scaled_shape_models (SearchImageReduced, ModelIDs, [-rad(22.5),-rad(30)], [rad(45),rad(60)], [0.8,0.6], [1.2,1.4], 0.7, 0, 0, 'least_squares', 0, 0.8, RowCheck, ColumnCheck, AngleCheck, ScaleCheck, Score, ModelIndex)</l>
<l>for i := 0 to |Score| - 1 by 1</l>
<c>    * step 4: determine the transformation</c>
<l>    Model := ModelIndex[i]</l>
<l>    vector_angle_to_rigid (0, 0, 0, RowCheck[i], ColumnCheck[i], AngleCheck[i], MovementOfObject)</l>
<l>    hom_mat2d_scale (MovementOfObject, ScaleCheck[i], ScaleCheck[i], RowCheck[i], ColumnCheck[i], MoveAndScalingOfObject)</l>
<c>    * -&gt; access the XLD contours belonging to the model</c>
<l>    copy_obj (ShapeModels, ShapeModel, StartContoursInTuple[Model], NumContoursInTuple[Model])</l>
<l>    affine_trans_contour_xld (ShapeModel, ModelAtNewPosition, MoveAndScalingOfObject)</l>
<l>    dev_display (ModelAtNewPosition)</l>
<l>    disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>    stop ()</l>
<l>endfor</l>
<c>* -------------------  end of the application  -----------------</c>
<c>* clean up</c>
<l>dev_update_window ('on')</l>
<l>clear_shape_model (ModelIDRing)</l>
<l>clear_shape_model (ModelIDNut)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
