<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.1.0">
<procedure name="main">
<interface/>
<body>
<c>* This example program applies image segmentation with an MLP</c>
<c>* classifier to separate oranges and lemons from the background.</c>
<c>* </c>
<l>read_image (Image, 'color/citrus_fruits_01')</l>
<l>get_image_pointer1 (Image, Pointer, Type, Width, Height)</l>
<l>dev_close_window ()</l>
<l>dev_open_window (0, 0, Width, Height, 'white', WindowHandle)</l>
<l>set_display_font (WindowHandle, 12, 'mono', 'true', 'false')</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (2)</l>
<l>dev_display (Image)</l>
<l>dev_update_window ('off')</l>
<l>dev_update_pc ('off')</l>
<l>dev_update_var ('off')</l>
<l>dev_set_color ('white')</l>
<c>* </c>
<c>* Create an MLP classifier</c>
<l>create_class_mlp (3, 3, 3, 'softmax', 'normalization', 10, 42, MLPHandle)</l>
<c>* </c>
<c>* Read a training image and add samples for the classes</c>
<c>* 'oranges' and 'background' to the classifier</c>
<l>read_image (Image, 'color/citrus_fruits_01')</l>
<l>dev_display (Image)</l>
<l>gen_rectangle1 (OrangeRegion, 100, 130, 230, 200)</l>
<l>dev_display (OrangeRegion)</l>
<l>disp_message (WindowHandle, 'OrangeRegion', 'window', 100, 210, 'black', 'true')</l>
<l>dev_set_color ('white')</l>
<l>gen_rectangle1 (BackgroundRegion, 30, 20, 50, 50)</l>
<l>dev_display (BackgroundRegion)</l>
<l>disp_message (WindowHandle, 'BackgroundRegion', 'window', 30, 60, 'black', 'true')</l>
<l>dev_set_color ('white')</l>
<l>gen_empty_region (EmptyRegion)</l>
<l>gen_empty_obj (TrainingRegions1)</l>
<l>concat_obj (TrainingRegions1, OrangeRegion, TrainingRegions1)</l>
<l>concat_obj (TrainingRegions1, EmptyRegion, TrainingRegions1)</l>
<l>concat_obj (TrainingRegions1, BackgroundRegion, TrainingRegions1)</l>
<l>add_samples_image_class_mlp (Image, TrainingRegions1, MLPHandle)</l>
<l>stop ()</l>
<c>* </c>
<c>* Read a training image and add samples for the classes</c>
<c>* 'lemons' and 'background' to the classifier</c>
<l>read_image (Image, 'color/citrus_fruits_03')</l>
<l>dev_display (Image)</l>
<l>gen_rectangle1 (LemonRegion, 180, 130, 230, 240)</l>
<l>dev_display (LemonRegion)</l>
<l>disp_message (WindowHandle, 'LemonRegion', 'window', 180, 250, 'black', 'true')</l>
<l>dev_set_color ('white')</l>
<l>gen_rectangle1 (BackgroundRegion, 400, 20, 430, 50)</l>
<l>dev_display (BackgroundRegion)</l>
<l>disp_message (WindowHandle, 'BackgroundRegion', 'window', 400, 60, 'black', 'true')</l>
<l>gen_empty_obj (TrainingRegions2)</l>
<l>concat_obj (TrainingRegions2, EmptyRegion, TrainingRegions2)</l>
<l>concat_obj (TrainingRegions2, LemonRegion, TrainingRegions2)</l>
<l>concat_obj (TrainingRegions2, BackgroundRegion, TrainingRegions2)</l>
<l>add_samples_image_class_mlp (Image, TrainingRegions2, MLPHandle)</l>
<l>stop ()</l>
<c>* </c>
<c>* Train the classifier</c>
<l>disp_message (WindowHandle, 'Training...', 'window', 10, 450, 'black', 'true')</l>
<l>train_class_mlp (MLPHandle, 200, 1, 0.01, Error, ErrorLog)</l>
<l>disp_message (WindowHandle, 'completed', 'window', 30, 450, 'black', 'true')</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>dev_set_color ('white')</l>
<l>stop ()</l>
<l>dev_set_draw ('fill')</l>
<c>* </c>
<c>* Segment images</c>
<l>for I := 1 to 15 by 1</l>
<l>    read_image (Image, 'color/citrus_fruits_' + I$'.2d')</l>
<l>    classify_image_class_mlp (Image, ClassRegions, MLPHandle, 0.5)</l>
<l>    select_obj (ClassRegions, ClassOranges, 1)</l>
<l>    select_obj (ClassRegions, ClassLemons, 2)</l>
<l>    select_obj (ClassRegions, ClassBackground, 3)</l>
<l>    dev_set_draw ('fill')</l>
<l>    dev_display (Image)</l>
<l>    dev_set_color ('slate blue')</l>
<l>    dev_display (ClassBackground)</l>
<l>    dev_set_color ('goldenrod')</l>
<l>    dev_display (ClassOranges)</l>
<l>    dev_set_color ('yellow')</l>
<l>    dev_display (ClassLemons)</l>
<l>    disp_message (WindowHandle, 'Classify Image ' + I, 'window', 10, 10, 'black', 'true')</l>
<l>    disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>    stop ()</l>
<c>    * </c>
<c>    * Apply a post processing</c>
<l>    closing_circle (ClassOranges, RegionClosingOranges, 3.5)</l>
<l>    connection (RegionClosingOranges, ConnectedRegionsOranges)</l>
<l>    select_shape (ConnectedRegionsOranges, SelectedRegionsOranges, 'area', 'and', 20000, 99999)</l>
<l>    fill_up (SelectedRegionsOranges, RegionFillUpOranges)</l>
<l>    area_center (RegionFillUpOranges, AreasOranges, RowsOranges, ColumnsOranges)</l>
<l>    shape_trans (RegionFillUpOranges, RegionFillUpOranges, 'convex')</l>
<c>    * </c>
<l>    closing_circle (ClassLemons, RegionClosingLemons, 3.5)</l>
<l>    connection (RegionClosingLemons, ConnectedRegionsLemons)</l>
<l>    select_shape (ConnectedRegionsLemons, SelectedRegionsLemons, 'area', 'and', 15000, 99999)</l>
<l>    fill_up (SelectedRegionsLemons, RegionFillUpLemons)</l>
<l>    area_center (RegionFillUpLemons, AreasLemons, RowsLemons, ColumnsLemons)</l>
<l>    shape_trans (RegionFillUpLemons, RegionFillUpLemons, 'convex')</l>
<c>    * </c>
<l>    dev_display (Image)</l>
<l>    dev_set_draw ('margin')</l>
<l>    dev_set_line_width (5)</l>
<l>    dev_set_color ('goldenrod')</l>
<l>    dev_display (RegionFillUpOranges)</l>
<l>    dev_set_color ('yellow')</l>
<l>    dev_display (RegionFillUpLemons)</l>
<l>    disp_message (WindowHandle, 'Classify Image ' + I + ' with Post Processing', 'window', 10, 10, 'black', 'true')</l>
<l>    disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>    disp_message (WindowHandle, 'Class: oranges', 'window', RowsOranges, ColumnsOranges - 50, 'black', 'true')</l>
<l>    disp_message (WindowHandle, 'Class: lemons', 'window', RowsLemons, ColumnsLemons - 50, 'black', 'true')</l>
<l>    stop ()</l>
<l>endfor</l>
<l>dev_clear_window ()</l>
<c>* </c>
<c>* Clear the classifier from memory</c>
<l>clear_class_mlp (MLPHandle)</l>
<l>disp_message (WindowHandle, 'No more lines to execute', 'window', 10, 10, 'black', 'true')</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
