<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.1.1">
<procedure name="main">
<interface/>
<body>
<l>dev_close_window ()</l>
<c></c>
<l>WidthReal := 210</l>
<l>HeightReal := 297</l>
<c></c>
<l>PixelEq := 1</l>
<l>Scale := 3</l>
<c></c>
<l>WidthFix := WidthReal * Scale</l>
<l>HeightFix := HeightReal * Scale</l>
<c></c>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,1]" as_ord="1">open_framegrabber ('GigEVision2', 0, 0, 0, 0, 0, 0, 'progressive', -1, 'default', -1, 'false', 'default', 'c42f90f2b7fa_Hikvision_MVCE12010GM', 0, -1, AcqHandle)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">grab_image_start (AcqHandle, -1)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">while (true)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    grab_image_async (Image, AcqHandle, -1)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<c>    </c>
<c>    </c>
<l>*     read_image (Image, 'paper2.jpg')</l>
<c>    </c>
<l>    dev_open_window_fit_image (Image, 110, 110, -1, -1, WindowHandle)</l>
<l>    dev_display (Image)</l>
<c>    </c>
<l>    critical_points_sub_pix (Image, 'facet', 0.5, 10, RowMin, ColumnMin, RowMax, ColumnMax, RowSaddle, ColumnSaddle)</l>
<c>    </c>
<l>    dev_set_color ('yellow')</l>
<l>    for i := 0 to |RowSaddle| - 1 by 1</l>
<l>      gen_cross_contour_xld (Cross, RowSaddle[i], ColumnSaddle[i], 50, 0.785398)</l>
<l>      dev_display (Cross)</l>
<l>    endfor</l>
<c>    </c>
<l>*     get_region_points(Region, RowSaddle, ColumnSaddle)</l>
<l>*     get_contour_xld (Region, Row, Col)</l>
<c>    </c>
<l>*     XCoordCorners :=  RowSaddle</l>
<l>*     YCoordCorners := ColumnSaddle</l>
<c>    </c>
<l>    tuple_sum (RowSaddle/4, XC)</l>
<l>    tuple_sum (ColumnSaddle/4,YC)</l>
<c>    </c>
<c>    </c>
<c>    </c>
<l>*     XCoordCorners :=  [66,430,822,334]</l>
<l>*     YCoordCorners := [700,320,1050,1350]</l>
<l>    X := []</l>
<l>    Y := []</l>
<c>    </c>
<c>    </c>
<l>    for i := 0 to 3 by 1</l>
<l>        x := RowSaddle[i]</l>
<l>        y := ColumnSaddle[i] </l>
<c>        </c>
<l>        if (x &gt; XC and y &gt; YC)</l>
<l>            X[3] := x</l>
<l>            Y[3] := y</l>
<l>        endif</l>
<l>        if (x &lt; XC and y &gt; YC)</l>
<l>            X[0] := x</l>
<l>            Y[0] := y</l>
<l>        endif</l>
<l>        if (x &lt; XC and y &lt; YC)</l>
<l>            X[1] := x</l>
<l>            Y[1] := y</l>
<l>        endif</l>
<l>        if (x &gt; XC and y &lt; YC)</l>
<l>            X[2] := x</l>
<l>            Y[2] := y</l>
<l>        endif</l>
<l>    endfor</l>
<c>    </c>
<c>    </c>
<c>    </c>
<l>    hom_vector_to_proj_hom_mat2d (X, Y, [1,1,1,1], [0,HeightFix,HeightFix,0], [0,0,WidthFix,WidthFix], [1,1,1,1], 'normalized_dlt', HomMat2D)</l>
<l>*     hom_vector_to_proj_hom_mat2d (X, Y, [], [], [], [], 'normalized_dlt', HomMat2D)</l>
<c>    * </c>
<c>    * Now rectifiy the slanted image by applying the projective transformation</c>
<l>    projective_trans_image (Image, ImageFix, HomMat2D, 'bilinear', 'false', 'false')</l>
<c>    </c>
<l>    gen_rectangle2 (Rectangle, 0, 0, 0, WidthFix, HeightFix)</l>
<c>    </c>
<l>    reduce_domain (ImageFix, Rectangle, ImageReduced)</l>
<c>    </c>
<l>    dev_close_window ()</l>
<c>    </c>
<l>    dev_open_window_fit_size (110, 110, WidthFix, HeightFix, -1, -1, WindowHandle1)</l>
<c>    </c>
<l>    dev_display (ImageReduced)</l>
<c>    </c>
<c>    </c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endwhile</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[4,1]" as_ord="1">close_framegrabber (AcqHandle)</l>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
