<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0" cs="8646211">
<procedure name="peak">
<interface>
<io>
<par name="Image"/>
</io>
<ic>
<par name="Row"/>
<par name="Coloumn"/>
<par name="Phi"/>
<par name="Length1"/>
<par name="Length2"/>
<par name="DetectWidth"/>
<par name="Sigma"/>
<par name="Threshold"/>
<par name="Transition"/>
<par name="Select"/>
</ic>
<oc>
<par name="EdgeRows"/>
<par name="EdgeColumns"/>
<par name="ResultRow"/>
<par name="ResultColumn"/>
</oc>
</interface>
<body>
<c>*初始化</c>
<l>ResultRow:=-9999</l>
<l>ResultCol:=-9999</l>
<l>EdgeColumns := []</l>
<l>EdgeRows := []</l>
<c></c>
<c>*仿射矩形Length2所在直线作为rake工具的ROI</c>
<l>ROILineRow1:=0</l>
<l>ROILineCol1:=0</l>
<l>ROILineRow2:=0</l>
<l>ROILineCol2:=0</l>
<c></c>
<c>*仿射矩形方向所直线的边做基准线</c>
<l>StdLineRow1:=0</l>
<l>StdLineCol1:=0</l>
<l>StdLineRow2:=0</l>
<l>StdLineCol2:=0</l>
<c>*判断仿射矩形是否有效</c>
<l>if(Length1&lt;=0 or Length2&lt;=0)</l>
<l>    return()</l>
<l>endif</l>
<c></c>
<c>*计算仿射矩形角度的正弦值、余弦值</c>
<l>tuple_cos (Phi, Cos)</l>
<l>tuple_sin (Phi, Sin)</l>
<c></c>
<c>*矩形第一个端点坐标</c>
<l>Col1 := 1.0*( Coloumn-Length1*Cos - Length2*Sin)</l>
<l>Row1 := 1.0*(Row-(-Length1*Sin + Length2*Cos))</l>
<c></c>
<c>*矩形第二个端点坐标</c>
<l>Col2 := 1.0*(Coloumn+Length1*Cos - Length2*Sin)</l>
<l>Row2 := 1.0*(Row-(Length1*Sin + Length2*Cos))</l>
<c></c>
<c>*矩形第三个端点坐标</c>
<l>Col3 := 1.0*(Coloumn+Length1*Cos + Length2*Sin)</l>
<l>Row3 := 1.0*(Row-(Length1*Sin - Length2*Cos))</l>
<c></c>
<c>*矩形第四个端点坐标</c>
<l>Col4 := 1.0*(Coloumn-Length1*Cos + Length2*Sin)</l>
<l>Row4 := 1.0*(Row-(-Length1*Sin - Length2*Cos))</l>
<c></c>
<c>*仿射矩形方向所直线的边做基准线</c>
<l>StdLineRow1:=Row2</l>
<l>StdLineCol1:=Col2</l>
<l>StdLineRow2:=Row3</l>
<l>StdLineCol2:=Col3</l>
<c></c>
<c>*仿射矩形Length2所在直线作为rake工具的ROI</c>
<l>ROILineRow1 := (Row1+Row2)*0.5</l>
<l>ROILineCol1:= (Col1+Col2)*0.5</l>
<l>ROILineRow2 := (Row3+Row4)*0.5</l>
<l>ROILineCol2:= (Col3+Col4)*0.5</l>
<l>* gen_rectangle2_contour_xld (Rectangle, Row, Coloumn, Phi, Length1, Length2)</l>
<l>rake (Image, Regions1, 1.0*Length2*2, Length1*2, DetectWidth, Sigma, Threshold, Transition, Select, ROILineRow1, ROILineCol1, ROILineRow2, ROILineCol2, ResultRows, ResultColumns)</l>
<c> </c>
<c>*求所有边缘点到基准线的距离，保存最大距离及其对应的边缘点坐标，作为顶点</c>
<l>Max:=0</l>
<l>if(|ResultColumns|&gt;0)</l>
<l>    EdgeRows := ResultRows</l>
<l>    EdgeColumns := ResultColumns</l>
<l>    for i := 0 to |ResultColumns|-1 by 1</l>
<l>        distance_pl (ResultRows[i], ResultColumns[i], StdLineRow1, StdLineCol1, StdLineRow2, StdLineCol2, Distance1)</l>
<l>    if(Max&lt;Distance1)</l>
<l>        Max:=Distance1</l>
<l>        ResultRow:=ResultRows[i]</l>
<l>        ResultColumn:=ResultColumns[i]</l>
<l>    endif</l>
<c>    </c>
<l>    endfor</l>
<l>endif</l>
<c></c>
<c></c>
<l>return ( )</l>
<c></c>
</body>
<docu id="peak">
<library lang="zh_CN">MVTec Standard Procedures</library>
<parameters>
<parameter id="Coloumn"/>
<parameter id="DetectWidth"/>
<parameter id="EdgeColumns"/>
<parameter id="EdgeRows"/>
<parameter id="Image">
<description lang="zh_CN">输入图像</description>
<sem_type>image</sem_type>
<type_list>
<item>byte</item>
<item>int1</item>
<item>int2</item>
<item>uint2</item>
<item>int4</item>
<item>int8</item>
<item>real</item>
<item>cyclic</item>
<item>direction</item>
<item>complex</item>
<item>vector_field</item>
</type_list>
</parameter>
<parameter id="Length1"/>
<parameter id="Length2"/>
<parameter id="Phi"/>
<parameter id="ResultColumn">
<description lang="zh_CN">检测到的边缘的x坐标数组</description>
<sem_type>real</sem_type>
<type_list>
<item>real</item>
</type_list>
<values>
<item>ResultColumn</item>
</values>
</parameter>
<parameter id="ResultRow">
<description lang="zh_CN">检测到的边缘的y坐标数组</description>
<sem_type>real</sem_type>
<type_list>
<item>real</item>
<item>string</item>
</type_list>
<values>
<item>ResultRow</item>
</values>
</parameter>
<parameter id="Row"/>
<parameter id="Select">
<default_value>'max'</default_value>
<description lang="zh_CN">first表示选择第一点
last表示选择最后一点
max表示选择边缘幅度最强点</description>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
<values>
<item>'first'</item>
<item>'last'</item>
<item>'max'</item>
</values>
</parameter>
<parameter id="Sigma">
<default_value>1</default_value>
<description lang="zh_CN">高斯滤波因子</description>
<multivalue>false</multivalue>
<sem_type>real</sem_type>
<type_list>
<item>real</item>
</type_list>
<values>
<item>0.5</item>
<item>1</item>
<item>1.5</item>
<item>2</item>
<item>2.5</item>
<item>3</item>
</values>
</parameter>
<parameter id="Threshold">
<default_value>20</default_value>
<description lang="zh_CN">边缘幅度阈值</description>
<multivalue>false</multivalue>
<sem_type>real</sem_type>
<type_list>
<item>integer</item>
<item>real</item>
</type_list>
<values>
<item>5</item>
<item>10</item>
<item>15</item>
<item>20</item>
<item>25</item>
<item>30</item>
<item>40</item>
</values>
</parameter>
<parameter id="Transition">
<default_value>'all'</default_value>
<description lang="zh_CN">极性：
positive表示由黑到白
negative表示由白到黑
all表示以上两种方向</description>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
<values>
<item>'positive'</item>
<item>'negative'</item>
<item>'all'</item>
</values>
</parameter>
</parameters>
</docu>
</procedure>
</hdevelop>
